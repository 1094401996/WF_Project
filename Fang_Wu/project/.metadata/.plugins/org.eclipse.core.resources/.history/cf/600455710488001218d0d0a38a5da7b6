package com.wufang.server.backend;
/**
 * 
 * @author Fang Wu
 *
 */
import java.io.*;
import java.net.*;
import java.util.*;
import com.wufang.common.*;
import com.wufang.server.utilities.SocketThreadsManager;
public class ServerBackend  {

	public  ServerBackend(){
		try {
			System.out.println("服务器5555正在监听");
			ServerSocket ss = new ServerSocket(5555);
			
			while(true){
			//the accept method is blocking.....
				Socket s=ss.accept();
				System.out.println("check mine");
			//接受客户端的信息
				ObjectInputStream ois=new ObjectInputStream(s.getInputStream());
				Info in=(Info)ois.readObject();
				System.out.println("I get the username: " + in.getUsername() + ", the password: " + in.getPassword());
				ObjectOutputStream oos=new ObjectOutputStream(s.getOutputStream());
				Info out = new Info();
				if(in.getPassword().equals("123456")){
					
					SocketProcessThread spt = new SocketProcessThread(s);
					SocketThreadsManager stm = SocketThreadsManager.getInstance();
					stm.addSocketThread(in.getUsername(), spt);
					//启动和该客户端通信的线程
					spt.start();
					
				  //返回一个成功登录的信息包,认证用户登录的地方
					out.setInfoType(InfoType.login_succeed);
					out.setReceiver(in.getSender());
					oos.writeObject(out);
					//在这里单开一个线程
					
				}else{
					out.setInfoType(InfoType.login_fail);
					oos.writeObject(out);
					s.close();
				}
				}
		} catch (Exception e) {
			System.out.println("bug in you server");
			e.printStackTrace();
		}
	}

}
