package com.wufang.client.frontend;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

import com.wufang.client.backend.ClientBackend;
import com.wufang.client.backend.ClientLoginVerify;
import com.wufang.client.backend.ClientThread;
import com.wufang.client.utilities.ClientThreadsManager;
import com.wufang.client.utilities.FriendListsManager;
import com.wufang.common.Info;
import com.wufang.common.InfoType;
import com.wufang.common.User;

import java.awt.Container;
import java.io.*;
/*@author Fang Wu
 * @function frontend of client. login....
 * 不但要发信息还要接受信息，所以客户端要多线程
 */
public class ClientLogin extends JFrame {
	//define the north part of frame
	JLabel jln = null;
	
	//deifne the middle part of frame
	JPanel jpm = null;
	JLabel jlm1,jlm2;
	JTextField jtm;
	JPasswordField jpwm;
	
	//define the south part of frame
	JPanel jps = null;
	JButton jbs1,jbs2,jbs3;

	public static void main(String[] args) {
		new ClientLogin().startClient();
	}
	
	public void startClient(){
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//处理北边
		jln = new JLabel("welcome to the chat client",JLabel.CENTER);
		//处理南边
		jps = new JPanel();
		jbs1 = new JButton("login");
		jbs1.addActionListener(new loginListener());
		jbs2 = new JButton("cancel");
		jbs3 = new JButton("help");
		jps.add(jbs1);
		jps.add(jbs2);
		jps.add(jbs3);
		
		//处理中间
		jpm = new JPanel(new GridLayout(2,2));
		jlm1 = new JLabel("username",JLabel.CENTER);
		jlm2 = new JLabel("password",JLabel.CENTER);
		jtm = new JTextField();
		jpwm = new JPasswordField();
		jpm.add(jlm1);
		jpm.add(jtm);
		jpm.add(jlm2);
		jpm.add(jpwm);
		
		
//		this.setSize(400,250);
		this.add(jln,"North");
		this.add(jps,"South");
		this.add(jpm,"Center");
		this.pack();
		this.setResizable(false);
		this.setVisible(true);	
	}
	class loginListener implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {
			
			ClientLoginVerify clv = new ClientLoginVerify();
			Info in = new Info();
			in.setUsename(jtm.getText());
			in.setPassword(new String(jpwm.getPassword()));
			if(clv.verifyUser(in)){
				//发送一个要求返回在线好友的请求包
				try {
					FriendList fl = new FriendList();
					fl.friendlist(u.getUsername());
					FriendListsManager flm = FriendListsManager.getInstance();
					flm.addFriendList(u.getUsername(), fl);
					ClientLogin.this.dispose();
					ClientThreadsManager ctm = ClientThreadsManager.getInstance();
					ClientThread ct = ctm.getClientThread(u.getUsername());
					Info out = new Info();
					out.setSender(u.getUsername());
					out.setInfoType(InfoType.require_onlineFriends);
					ct.sendInfo(out);
				} catch (Exception e1) {
					e1.printStackTrace();
				}
				
			}else{
				JOptionPane.showMessageDialog(ClientLogin.this,"wrong username or password");
			}
			
		}
		
	}
	

}
